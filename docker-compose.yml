services:
  redis:
    env_file:
      - .env  
    image: redis:latest
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - backend

  db:
    image: mysql:latest
    container_name: mysql
    env_file:
      - .env
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE:     ${MYSQL_DATABASE}
      MYSQL_USER:         ${MYSQL_USER}
      MYSQL_PASSWORD:     ${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -p${MYSQL_ROOT_PASSWORD} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - backend

  app:
    build: .
    env_file:
      - .env  
    container_name: my-app
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      REDIS_URL:    redis://redis:6379
      DB_HOST:      db
      DB_PORT:      3306
      DB_USER:      ${MYSQL_USER}
      DB_PASS:      ${MYSQL_PASSWORD}
      DB_NAME:      ${MYSQL_DATABASE}
    ports:
      - "3000:3000"
    networks:
      - backend

volumes:
  redis-data:
  mysql-data:

networks:
  backend:
